name: GPT Translate

on:
  issue_comment:
    types: [created]

jobs:
  gpt_translate:
    if: contains(github.event.comment.body, '/translate ')
    runs-on: ubuntu-latest
    steps:
      # /translate 1.md,2.md... English,French...
      - name: Parse Comment
        id: parse_comment
        uses: actions/github-script@v7
        with:
          script: |
            const LANGUAGE_MAP = {
              'ar': '阿拉伯语',
              'de': '德语',
              'es': '西班牙语',
              'fr': '法语',
              'jp': '日语',
              'kr': '韩语',
              'pt': '葡萄牙语',
              'rus': '俄语',
              'vi': '越南语',
              'en': '英语',
            };
            const commentBody = '${{ github.event.comment.body }}';
            const regex = /\/translate +(\S+)(?: +(\S+))?/;
            const match = commentBody.match(regex);
            if (!match) {
              throw new Error('Invalid comment format. Use /translate file1,file2,... language1,language2,...');         
            }
            const files = match[1].split(',').map(file => file.trim());
            const languages = match[2] ? match[2].split(',').map(lang => lang.trim()) : Object.keys(LANGUAGE_MAP);
            console.log(`Files: ${files}, Languages: ${languages}`);
            const inputFiles = files.map(file => "/docs/zh/" + file).join(' ');
            let targetLanguages = [];
            for (const lang of languages) {
              if (!LANGUAGE_MAP[lang]) {
                throw new Error(`Unsupported language: ${lang}`);
              }
              targetLanguages.push(LANGUAGE_MAP[lang]);
            }
            targetLanguages = targetLanguages.join(' ');
            const outputFiles = languages.map(lang => lang != 'en' ? `/docs/${lang}/*` : `/*`).join(' ');
            core.setOutput('inputFiles', inputFiles);
            core.setOutput('outputFiles', outputFiles);
            core.setOutput('targetLanguages', targetLanguages);
          

      - uses: actions/checkout@v4

      - name: Run GPT Translate
        uses: 3ru/gpt-translate@master
        with:
          apikey: ${{ secrets.OPENAI_API_KEY }}
          model: ${{ secrets.OPENAI_MODEL }}
          basePath: ${{ secrets.OPENAI_BASE_URL }}
          prompt: '请将给定文本翻译为目标语言 {targetLanguage}。翻译带链接的内容时请勿修改任何链接地址，但可以在合适的情况修改链接文本。请确保翻译后的文本符合 {targetFileExt} 文件的语法和格式。请勿添加任何额外的解释或注释。文本内容如下：'
          inputFiles: ${{ steps.parse_comment.outputs.inputFiles }}
          outputFiles: ${{ steps.parse_comment.outputs.outputFiles }}
          languages: ${{ steps.parse_comment.outputs.targetLanguages }}

